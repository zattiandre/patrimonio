<html>
  <head>
    <meta name="viewport" content="initial-scale=1, user-scalable=no">
    <meta charset="UTF-8">
    <title>SIT Patrimonio</title>
    
<link href='http://fonts.googleapis.com/css?family=Roboto+Condensed' rel='stylesheet' type='text/css'>
<link href="map.css" rel="stylesheet" type="text/css">


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.js" type="text/javascript"></script>
<script type="text/javascript"src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAUfTOPQ4shw53wbcIpXfyi42xfWn0B7Zw&libraries=visualization&callback=initMap"></script>
<script type="text/javascript" src="ExtDraggableObject.js"></script>
<script src="slide.js"></script>
<script type="text/javascript">

var overlay ;
var map;
//set up geocoder
var geocoder;
var marker;




// Create a meausure object to store our markers, MVCArrays, lines and polygons
var measure = {
    mvcLine: new google.maps.MVCArray(),
    mvcPolygon: new google.maps.MVCArray(),
    mvcMarkers: new google.maps.MVCArray(),
    line: null,
    polygon: null
};


//set up geocoder
//set up on/off function
function toggleLayer(this_layer){
if(this_layer.getMap()) {
this_layer.setMap(null)
} else {
this_layer.setMap(map);
}
}
//set up on/off function: 0nctr - 1proprieta - 2dirsup - 3conv - 4rpp - 5convpoint - 6circoscizioni - 7quartieri - 8listino - 9NCTR 2013
//set up various maps tile options

var nctr13MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/NCTR2013/TILE/" +
zoom + "/" + coord.x + "/" + (Math.pow(2,zoom)-coord.y-1) + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 20,
minZoom: 8,
name: "NCTR13"
};

var nctr15MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/NCTR2015/TILE/" +
zoom + "/" + coord.x + "/" + (Math.pow(2,zoom)-coord.y-1) + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 20,
minZoom: 8,
name: "NCTR15"
};

var nceuMapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/NCEU/TILE/" +
zoom + "/" + coord.x + "/" + (Math.pow(2,zoom)-coord.y-1) + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 20,
minZoom: 8,
name: "NCEU"
};

var hd2007MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/HD/TILE/" +
zoom + "/" + coord.x + "/" + (Math.pow(2,zoom)-coord.y-1) + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 20,
minZoom: 8,
name: "HD2007"
};

var hd2015MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/AGEA2015/AGEA2015/" +
zoom + "/" + coord.x + "/" + (Math.pow(2,zoom)-coord.y-1) + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 20,
minZoom: 8,
name: "HD2015"
};

var raf96MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/RAF96/TILE/" +
zoom + "/" + coord.x + "/" + (Math.pow(2,zoom)-coord.y-1) + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 20,
minZoom: 8,
name: "RAF96"
};

var VDG01MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-DG01/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VDG01"
};

var VPR02MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-PR02/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VPR02"
};

var VPS02MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-PS02/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VPS02"
};

var CTRMapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/CTR/" +
zoom + "/" + coord.x + "/" + (Math.pow(2,zoom)-coord.y-1) + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 18,
minZoom: 10,
name: "CTR"
};

var osmMapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "http://tile.openstreetmap.org/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 0,
name: "OSM"
};


var RIFMapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/RIF/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "RIF"
};

var RIOMapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/RIO/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "RIO"
};

var VPR031MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-PR03.1/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VPR031"
};


var VPR032MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-PR03.2/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VPR032"
};

var VPR11MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-PR11/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VPR11"
};

var VPR12MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-PR12/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VPR12"
};

var VPS03MapTypeOptions = {
getTileUrl: function(coord, zoom) {
return "//dfs01/UsersFolders/Settore Patrimonio/TECNICO/CARTOGRAFIA/TILE/PGT/V-PS03/" +
zoom + "/" + coord.x + "/" + coord.y + ".png";
},
tileSize: new google.maps.Size(256, 256),
isPng: true,
maxZoom: 19,
minZoom: 11,
name: "VPS03"
};



//stop - set up various maps tile options
//create OSM Map Type as ImageMapType, pass options object

var nctr13MapType = new google.maps.ImageMapType(nctr13MapTypeOptions);
var nctr15MapType = new google.maps.ImageMapType(nctr15MapTypeOptions);
var nceuMapType = new google.maps.ImageMapType(nceuMapTypeOptions);
var hd2015MapType = new google.maps.ImageMapType(hd2015MapTypeOptions);
var hd2007MapType = new google.maps.ImageMapType(hd2007MapTypeOptions);
var raf96MapType = new google.maps.ImageMapType(raf96MapTypeOptions);
var VDG01MapType = new google.maps.ImageMapType(VDG01MapTypeOptions);
var VPR02MapType = new google.maps.ImageMapType(VPR02MapTypeOptions);
var VPR031MapType = new google.maps.ImageMapType(VPR031MapTypeOptions);
var VPR032MapType = new google.maps.ImageMapType(VPR032MapTypeOptions);
var VPR11MapType = new google.maps.ImageMapType(VPR11MapTypeOptions);
var VPR12MapType = new google.maps.ImageMapType(VPR12MapTypeOptions);
var VPS02MapType = new google.maps.ImageMapType(VPS02MapTypeOptions);
var VPS03MapType = new google.maps.ImageMapType(VPS03MapTypeOptions);
var CTRMapType = new google.maps.ImageMapType(CTRMapTypeOptions);
var RIFMapType = new google.maps.ImageMapType(RIFMapTypeOptions);
var RIOMapType = new google.maps.ImageMapType(RIOMapTypeOptions);
var osmMapType = new google.maps.ImageMapType(osmMapTypeOptions);


var map;//setup map
google.maps.visualRefresh = true;

function initialize(){
var latlng = new google.maps.LatLng(45.536, 10.22 );
var mapOpts = {
zoom: 13,
center: latlng,
scaleControl: true,
mapTypeControlOptions: {
mapTypeIds: [google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.TERRAIN,google.maps.MapTypeId.HYBRID,google.maps.MapTypeId.SATELLITE,'NCTR_2013','NCTR_2015','NCEU','HD2015','HD2007', 'RAF96', 'VDG01','VPR02','VPR031','VPR032', 'VPR11', 'VPR12', 'VPS02', 'VPS03', 'CTR', 'RIF', 'RIO', 'OSM',  ],//add OSM to map type selection list



style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
position: google.maps.ControlPosition.TOP_LEFT
},
panControl: false,

draggableCursor: "crosshair", // Make the map cursor a crosshair so the user thinks they should click something

zoomControl: true,
zoomControlOptions: {

}};

enableCloseButton: true,
map = new google.maps.Map(document.getElementById("map"), mapOpts);

    google.maps.event.addListener(map, "click", function(evt) {
        // When the map is clicked, pass the LatLng obect to the measureAdd function
        measureAdd(evt.latLng);
    });


//add OSM tiles as map type, first parameter must match 'name' attribute of osmMapTypeOptions

map.mapTypes.set('NCTR_2013', nctr13MapType);
map.mapTypes.set('NCTR_2015', nctr15MapType);
map.mapTypes.set('NCEU', nceuMapType);
map.mapTypes.set('HD2007', hd2007MapType);
map.mapTypes.set('HD2015', hd2015MapType);
map.mapTypes.set('RAF96', raf96MapType);

map.mapTypes.set('VDG01', VDG01MapType);
map.mapTypes.set('VPR02', VPR02MapType);
map.mapTypes.set('VPR031', VPR031MapType);
map.mapTypes.set('VPR032', VPR032MapType);
map.mapTypes.set('VPR11', VPR11MapType);
map.mapTypes.set('VPR12', VPR12MapType);
map.mapTypes.set('VPS02', VPS02MapType);
map.mapTypes.set('VPS03', VPS03MapType);

map.mapTypes.set('CTR', CTRMapType);
map.mapTypes.set('RIF', RIFMapType);
map.mapTypes.set('RIO', RIOMapType);
map.mapTypes.set('OSM', osmMapType);

//set default maptype to gmapsroad tiles
map.setMapTypeId(google.maps.MapTypeId.ROADMAP);



//set up fusion




function layer() {
  var layer = this;
  var name = layer.getGeoJSON().name;

  var item = filters.appendChild(document.createElement('div'));
  var checkbox = item.appendChild(document.createElement('input'));
  var label = item.appendChild(document.createElement('label'));
  checkbox.type = 'checkbox';
  checkbox.id = name;
  label.innerHTML = name;
  label.setAttribute('for', name);
  checkbox.addEventListener('change', update);

  function update() {
    (checkbox.checked) ? layer.addTo(map) : map.removeLayer(layer);
  }
}


map.data.loadGeoJson('https://raw.githubusercontent.com/zattiandre/patrimonio/master/quartieri.geojson')
    .on('ready', layer);


//layer0 - Fogli NCTR
layer0 = new google.maps.FusionTablesLayer({query: {
select: "'col4'",
from: '13ldCx9y7IWLZALtyi7vfvkXlTp74r56aDfxaVNY'},
styleId: 2,
templateId: 2
});

//layer1 - Proprietà
layer1 = new google.maps.FusionTablesLayer({query: {
select: "'col24'",
from: '1_SUF_ZTrH4tVhfKZdQCkw17AJ4EmsgCiqSr8zq3f'},
styleId: 2,
templateId: 2
});

//layer2 - Diritti di superficie
layer2 = new google.maps.FusionTablesLayer({query: {
select: "'col24'",
from: '1gy3CcEnqy-peB9MUfekT3xg467Jv_bB6ukELRp4z'},
styleId: 2,
templateId: 2
});

//layer3 - Conv. Urbanistiche
layer3 = new google.maps.FusionTablesLayer({query: {
select: "'col9'",
from: '1z4aIyyzYmGYuZY0aK0Zjo9bmEV40UPC5nWfWuQSc'},
styleId: 2,
templateId: 3
});

//layer4 - RPP
layer4 = new google.maps.FusionTablesLayer({query: {
select: "'col3'",
from: '1k5cv3Maf3a99WYOLwEVt_jU2pXUp7ZRgYO5mYPpM'},
styleId: 2,
templateId: 2
});

//layer5 - Conv. Urbanistiche Point
layer5 = new google.maps.FusionTablesLayer({query: {
select: "'col8'",
from: '1HPZxkSky4gsc7iZu4ImcRZGo7ibvbsv2VlTCIynB'},
styleId: 2,
templateId: 2
});

//layer6 - Circoscrizioni
layer6 = new google.maps.FusionTablesLayer({query: {
select: "'col8'",
from: '15vjet821NLg_u6oVYUvLuDPTxGgB1GuBmfQPbdY'},
styleId: 2,
templateId: 2
});

//layer7 - Quartieri
layer7 = new google.maps.FusionTablesLayer({query: {
select: "'col6'",
from: '1XB0afa-PmxiDwDHfuHVyahpTjwWg5h85QmrgqiFq'},
styleId: 2,
templateId: 2
});

//layer8 - Listino immobiliare 2012
layer8 = new google.maps.FusionTablesLayer({query: {
select: "'col21'",
from: '1CNg4yJDUarB7zhqYq_EwX6s9d0gp-Rb_RJTHV4Q'},
styleId: 2,
templateId: 2
});



//layer10 - Particelle
layer10 = new google.maps.FusionTablesLayer({query: {
select: "'col8'",
from: '1gi2pKYDb8cfsedDeQujI1IPTmxziaqNr1FpKRv0'},
styleId: 2,
templateId: 2
});

//layer11 - Fabbricati
layer11 = new google.maps.FusionTablesLayer({query: {
select: "'col5'",
from: '1Izha5dB40t6hexqKajjYLs8YgPpAzb0ABnQv_WE'},
styleId: 2,
templateId: 2
});

//layer12 - TUC
layer12 = new google.maps.FusionTablesLayer({query: {
select: "'col2'",
from: '1N01ulPmFt07RgkPf6eQTlh5ekgQhQt6AkDwHLTw'},
styleId: 2,
templateId: 2
});

//layer13 - PDC
layer13 = new google.maps.FusionTablesLayer({query: {
select: "'co3'",
from: '1VzHYAInsDTv4nh8LowUIBUOyVjolB_A_OKM4V1A'},
styleId: 2,
templateId: 2
});

//layer14 - PCB 01
layer14 = new google.maps.FusionTablesLayer({query: {
select: "'co13'",
from: '1Ya23B04j6upB_zNsweN69X2PIERGYBTqED40--t5'},
styleId: 2,
templateId: 2
});

//layer15 - PCB 02
layer15 = new google.maps.FusionTablesLayer({query: {
select: "'co13'",
from: '12QbFgP_6AL0AQieU7Iglr_KXKTpE_huoN-zmVkCW'},
styleId: 2,
templateId: 2
});

//layer16 - Stradario Classificazione
layer16 = new google.maps.FusionTablesLayer({query: {
select: "'co113'",
from: '1kXfJ73yKu3ojy2r7PFdlJhGQp9spgqbQh636Iqq5'},
styleId: 2,
templateId: 2
});

//layer17 - PCB 03
layer17 = new google.maps.FusionTablesLayer({query: {
select: "'co13'",
from: '1YNQUZ57oe1M44cGZyFH3vcMZhQtLe4LcNix8X5vN'},
styleId: 2,
templateId: 2
});

//layer18 - Ord. Sind. Parchi
layer18 = new google.maps.FusionTablesLayer({query: {
select: "'co14'",
from: '1-AkwpV0VyS8ewauKRGqfbPNJxLS_vwBz0rGDRP0M'},
styleId: 2,
templateId: 2
});


//layer19 - servitu
layer19 = new google.maps.FusionTablesLayer({query: {
select: "'co16'",
from: '1md7f10BoaX3RDbU3VHLq7zhNGeH96mk6JsTea6F6'},
styleId: 2,
templateId: 2
});

//layer20 - terna
layer20 = new google.maps.FusionTablesLayer({query: {
select: "'co14'",
from: '1kjdYxrDdCtTjk82AHtvUHxKvAqVgIDOcq2ZTuass'},
styleId: 2,
templateId: 2
});

//layer21 - Comuni Censuari
layer21 = new google.maps.FusionTablesLayer({query: {
select: "'co16'",
from: '1e9qsbwwhJHAN2a-gFRJI3ihI4DYh8MR03CDBSIET'},
styleId: 2,
templateId: 2
});

//layer22 - Catasto Napoleonico
layer22 = new google.maps.FusionTablesLayer({query: {
select: "'co14'",
from: '1q_3tzR9cLA5XbiW3Y5cos55AzDVBaNviWkCU5MzI'},
styleId: 2,
templateId: 2
});





}







//set up fusion
//set up geocoder
geocoder = new google.maps.Geocoder();
marker = new google.maps.Marker();


function findAddress() {
var address = {'address': document.getElementById('address').value};
geocoder.geocode(address, function(results, status) {
if (status == google.maps.GeocoderStatus.OK) {
map.setCenter(results[0].geometry.location);
marker.setPosition(results[0].geometry.location);
marker.setMap(map);
}
});
}




google.maps.event.addDomListener(window, 'load', init);
//set up geocoder

function measureAdd(latLng) {

    // Add a draggable marker to the map where the user clicked
    var marker = new google.maps.Marker({
        map: map,
        position: latLng,
        draggable: true,
        raiseOnDrag: false,
        title: "Drag me to change shape",
        icon: new google.maps.MarkerImage("/images/demos/markers/measure-vertex.png", new google.maps.Size(9, 9), new google.maps.Point(0, 0), new google.maps.Point(5, 5))
    });

    // Add this LatLng to our line and polygon MVCArrays
    // Objects added to these MVCArrays automatically update the line and polygon shapes on the map
    measure.mvcLine.push(latLng);
    measure.mvcPolygon.push(latLng);

    // Push this marker to an MVCArray
    // This way later we can loop through the array and remove them when measuring is done
    measure.mvcMarkers.push(marker);

    // Get the index position of the LatLng we just pushed into the MVCArray
    // We'll need this later to update the MVCArray if the user moves the measure vertexes
    var latLngIndex = measure.mvcLine.getLength() - 1;

    // When the user mouses over the measure vertex markers, change shape and color to make it obvious they can be moved
    google.maps.event.addListener(marker, "mouseover", function() {
        marker.setIcon(new google.maps.MarkerImage("/images/demos/markers/measure-vertex-hover.png", new google.maps.Size(15, 15), new google.maps.Point(0, 0), new google.maps.Point(8, 8)));
    });

    // Change back to the default marker when the user mouses out
    google.maps.event.addListener(marker, "mouseout", function() {
        marker.setIcon(new google.maps.MarkerImage("/images/demos/markers/measure-vertex.png", new google.maps.Size(9, 9), new google.maps.Point(0, 0), new google.maps.Point(5, 5)));
    });

    // When the measure vertex markers are dragged, update the geometry of the line and polygon by resetting the
    //     LatLng at this position
    google.maps.event.addListener(marker, "drag", function(evt) {
        measure.mvcLine.setAt(latLngIndex, evt.latLng);
        measure.mvcPolygon.setAt(latLngIndex, evt.latLng);
    });

    // When dragging has ended and there is more than one vertex, measure length, area.
    google.maps.event.addListener(marker, "dragend", function() {
        if (measure.mvcLine.getLength() > 1) {
            measureCalc();
        }
    });

    // If there is more than one vertex on the line
    if (measure.mvcLine.getLength() > 1) {

        // If the line hasn't been created yet
        if (!measure.line) {

            // Create the line (google.maps.Polyline)
            measure.line = new google.maps.Polyline({
                map: map,
                clickable: false,
                strokeColor: "#FF0000",
                strokeOpacity: 1,
                strokeWeight: 3,
                path:measure. mvcLine
            });

        }

        // If there is more than two vertexes for a polygon
        if (measure.mvcPolygon.getLength() > 2) {

            // If the polygon hasn't been created yet
            if (!measure.polygon) {

                // Create the polygon (google.maps.Polygon)
                measure.polygon = new google.maps.Polygon({
                    clickable: false,
                    map: map,
                    fillOpacity: 0.25,
                    strokeOpacity: 0,
                    paths: measure.mvcPolygon
                });

            }

        }

    }

    // If there's more than one vertex, measure length, area.
    if (measure.mvcLine.getLength() > 1) {
        measureCalc();
    }

}
function measureCalc() {

    // Use the Google Maps geometry library to measure the length of the line
    var length = google.maps.geometry.spherical.computeLength(measure.line.getPath());
    jQuery("#span-length").text(length.toFixed(1))

    // If we have a polygon (>2 vertexes in the mvcPolygon MVCArray)
    if (measure.mvcPolygon.getLength() > 2) {
        // Use the Google Maps geometry library to measure the area of the polygon
        var area = google.maps.geometry.spherical.computeArea(measure.polygon.getPath());
        jQuery("#span-area").text(area.toFixed(1));
    }

}
function measureReset() {

    // If we have a polygon or a line, remove them from the map and set null
    if (measure.polygon) {
        measure.polygon.setMap(null);
        measure.polygon = null;
    }
    if (measure.line) {
        measure.line.setMap(null);
        measure.line = null
    }

    // Empty the mvcLine and mvcPolygon MVCArrays
    measure.mvcLine.clear();
    measure.mvcPolygon.clear();

    // Loop through the markers MVCArray and remove each from the map, then empty it
    measure.mvcMarkers.forEach(function(elem, index) {
        elem.setMap(null);
    });
    measure.mvcMarkers.clear();

    jQuery("#span-length,#span-area").text(0);

}



</script>




<style>
#map {
height: 100%;
width: 100%;
}
</style>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<body onLoad="initialize()">
<div id="map">

</div>
</head>
<div id="map-canvas">
</div>





<div id="misure">
<p>Lunghezza: <b><span id="span-length">0</span></b> mt - Area: <b><span id="span-area">0</span></b> mt² - <a href="javascript:measureReset();">Reset Measure</a></p> 
</div>












<div id="panel"> 
<input id="address" size="57" type="textbox" value="Brescia, Via Marconi, 12">
<input type="image" src="search.gif" alt="SUBMIT" value="Geocode" onClick="findAddress()">
</div>

<div id="rightnote"> 
Comune di Brescia - Servizio Patrimonio ed Inventario Beni Immobili - tutti i diritti riservati<br>
</div>



<div id="Legenda">





<a href="#" class="show_hide">  Open/Close </a>
<div class="slidingDiv">



<input type="checkbox" id="show_hide_layer0" onChange="toggleLayer(layer0)"/><label>   Fogli NCTR </label><br>
<input type="checkbox" id="show_hide_layer0" onChange="toggleLayer(layer10),toggleLayer(layer11)"/><label> Particelle </label><br>



<input type="checkbox" id="show_hide_layer0" onChange="toggleLayer(layer1),toggleLayer(layer2)"/><label> Proprietà & Dir. Sup.  </label><br>
&nbsp;&nbsp;&nbsp; <input type="checkbox" id="show_hide_layer1" onChange="toggleLayer(layer1)"/><label>   Proprieta </label><br>
&nbsp;&nbsp;&nbsp; <input type="checkbox" id="show_hide_layer2" onChange="toggleLayer(layer2)"/><label>   Diritti di superficie </label><br>


<input type="checkbox" id="show_hide_layer0" onChange="toggleLayer(layer3),toggleLayer(layer4),toggleLayer(layer5)"/>
<label> Convenzioni & RPP  </label><br>

&nbsp;&nbsp;&nbsp; <input type="checkbox" id="show_hide_layer3" onChange="toggleLayer(layer3),toggleLayer(layer5)"/><label>   Conv. Urbanistiche </label><br>
&nbsp;&nbsp;&nbsp; <input type="checkbox" id="show_hide_layer4" onChange="toggleLayer(layer4)"/><label>   RPP </label><br>

<input type="checkbox" id="show_hide_layer19" onChange="toggleLayer(layer19)"/><label> Servitu </label><br>

<input type="checkbox" id="show_hide_layer16" onChange="toggleLayer(layer16)"/><label> Stradario: Classificazione</label><br>





<input type="checkbox" id="show_hide_layer6" onChange="toggleLayer(layer6)"/><label> Circoscrizioni  </label><br>
<input type="checkbox" id="show_hide_layer7" onChange="toggleLayer(layer7)"/><label> Quartieri  </label><br>

<input type="checkbox" id="show_hide_layer13" onChange="toggleLayer(layer13)"/><label> Tessuto Urbano C.  </label><br>
<input type="checkbox" id="show_hide_layer12" onChange="toggleLayer(layer12)"/><label> Parco delle Colline  </label><br>
<input type="checkbox" id="show_hide_layer14" onChange="toggleLayer(layer14)"/><label> Area PCB S.I.N.</label><br>
<input type="checkbox" id="show_hide_layer15" onChange="toggleLayer(layer15)"/><label> Area PCB Ord. Sind.</label><br>
<input type="checkbox" id="show_hide_layer17" onChange="toggleLayer(layer17)"/><label> Area PCB FALDA</label><br>
<input type="checkbox" id="show_hide_layer18" onChange="toggleLayer(layer18)"/><label> Ord. Sind. Parchi</label><br>
<input type="checkbox" id="show_hide_layer20" onChange="toggleLayer(layer20)"/><label> Linee Elettriche</label><br>
<input type="checkbox" id="show_hide_layer21" onChange="toggleLayer(layer21)"/><label> Comuni censuari</label><br>
<input type="checkbox" id="show_hide_layer22" onChange="toggleLayer(layer22)"/><label> Catasto Napoleonico12:24 30/07/2018</label><br><br>



<button onClick="opensitprovincia()">SIT PROVINCIA</button>

<script>
function opensitprovincia() 
{window.open("http://sit.provincia.bs.it//infocatasto", "SIT", "width=700, height=400, top=100, left=1200, menubar=no,");
}
</script>


<button onClick="openlegendapr2015()">Legenda PR 2015</button>

<script>
function openlegendapr2015() 
{window.open("file://dfs01/usersfolders/Inventario%20Immobili/HTML/legenda2015/legendapr.html", "Legenda", "width=700, height=400, top=500, left=1200, menubar=no,");
}
</script>
<br>





<button onClick="openlegendaps2015()">Legenda PS 2015</button>

<script>
function openlegendaps2015() 
{window.open("file://dfs01/usersfolders/Inventario%20Immobili/HTML/legenda2015/legendaps.html", "Legenda", "width=700, height=400, top=100, left=1200, menubar=no,");
}
</script>




<br>
<button onClick="openlegendaidr()">Legenda Ret. Idr.</button>
<script>
function openlegendaidr() 
{window.open("file://dfs01/usersfolders/Inventario%20Immobili/HTML/legendaidr.png", "Legenda", "width=1600, height=800, top=100, left=100, menubar=no,");
}
</script>

<br>
<button onClick="segnalazioni()">Segnalazioni</button>

<script>
function segnalazioni() 
{window.open("https://www.google.com/maps/d/edit?mid=zkpPzAzL1V4A.kyhLCXil3JpU&usp=sharing");
}
</script>
<br>
<button onClick="dualmap()">Dualmap</button><br>
<button onClick="alert(map.getZoom());">Get Zoom</button><br><br>

<a href="file://dfs01/usersfolders/Inventario%20Immobili/HTML/PGT/SIT_PGT.html" target="_BLANK">PGT VIGENTE (NEW!!!)</a><br>




<br>
<a href="#" class="show_hide"> Close</a><br>
</div>
<br>
</div>




    <div id="map-canvas"></div>

</html>
